{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miapu\\\\DTS_A_Stringing_Operation\\\\src\\\\components\\\\MakeAppointment.js\",\n    _s = $RefreshSig$();\n\nimport { findAllByTestId } from '@testing-library/react';\nimport React, { useEffect, useState } from 'react';\nimport tennisRacketDTSStencil from '../images/tennisracketdtsstencil.png';\nimport tennisRacketNoDTSStencil from '../images/tennisracketnodtsstencil.png';\nimport tennisRacketNoStenCrossesHL from '../images/tennisracketnostencrosseshl.png';\nimport tennisRacketNoStenMainsHL from '../images/tennisracketnostenmainshl.png';\nimport tennisRacketStenCrossesHL from '../images/tennisracketstencrosseshl.png';\nimport tennisRacketStenMainsHL from '../images/tennisracketstenmainshl.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MakeAppointment = props => {\n  _s();\n\n  //Creates a state for Mains in order to update page when clicked\n  const [mainsDisplayBoolean, setMainsDisplayBoolean] = useState(false);\n\n  function handleMainsInputClick(event) {\n    event.stopPropagation();\n    const mainsTension = document.getElementById('mainsTension');\n    const mainsStringType = document.getElementById('mainsStringType');\n    mainsTension || mainsStringType === document.activeElement ? setMainsDisplayBoolean(true) : setMainsDisplayBoolean(false);\n    setCrossesDisplayBoolean(false);\n  } //Creates a state for Mains in order to update page when clicked\n\n\n  const [crossesDisplayBoolean, setCrossesDisplayBoolean] = useState(false);\n\n  function handleCrossesInputClick(event) {\n    event.stopPropagation();\n    console.log('crosses');\n    const crossesTension = document.getElementById('crossesTension');\n    const crossesStringType = document.getElementById('crossesStringType');\n    crossesTension || crossesStringType === document.activeElement ? setCrossesDisplayBoolean(true) : setCrossesDisplayBoolean(false);\n    setMainsDisplayBoolean(false);\n  } //Creates a state for DTS Stencil in order to update page when clicked\n\n\n  const [stencilDisplayBoolean, setStencilDisplayBoolean] = useState(false);\n\n  function handleStencilChkBxClick(event) {\n    event.stopPropagation();\n    const stencilCheckbox = document.getElementById('stencilCheckbox');\n    stencilCheckbox.checked === false ? setStencilDisplayBoolean(false) : setStencilDisplayBoolean(true);\n  } //Clears all highlights on racket\n\n\n  function handleHighlightClear() {\n    setMainsDisplayBoolean(false);\n    setCrossesDisplayBoolean(false);\n  }\n\n  useEffect(() => {\n    //logic to replace pictures showing highlighted strings\n    const appointmentRacketBase = document.getElementById('appointmentRacketBase');\n    const appointmentRacketStencil = document.getElementById('appointmentRacketStencil');\n    const appointmentRacketStencilMainsHL = document.getElementById('appointmentRacketStencilMainsHL');\n    const appointmentRacketBaseMainsHL = document.getElementById('appointmentRacketBaseMainsHL');\n    const appointmentRacketStencilCrossesHL = document.getElementById('appointmentRacketStencilCrossesHL');\n    const appointmentRacketBaseCrossesHL = document.getElementById('appointmentRacketBaseCrossesHL');\n\n    if (stencilDisplayBoolean === true) {\n      appointmentRacketStencil.style.display = 'flex';\n      appointmentRacketBase.style.display = 'none';\n      appointmentRacketStencilMainsHL.style.display = 'none';\n      appointmentRacketStencilCrossesHL.style.display = 'none';\n      appointmentRacketBaseCrossesHL.style.display = 'none';\n\n      if (mainsDisplayBoolean === true) {\n        appointmentRacketStencilMainsHL.style.display = 'flex';\n        appointmentRacketBaseMainsHL.style.display = 'none';\n        appointmentRacketStencil.style.display = 'none';\n      } else if (crossesDisplayBoolean === true) {\n        appointmentRacketStencilCrossesHL.style.display = 'flex';\n        appointmentRacketStencil.style.display = 'none';\n      }\n    } else {\n      appointmentRacketBase.style.display = 'flex';\n      appointmentRacketStencil.style.display = 'none';\n      appointmentRacketStencilMainsHL.style.display = 'none';\n      appointmentRacketBaseMainsHL.style.display = 'none';\n      appointmentRacketStencilCrossesHL.style.display = 'none';\n      appointmentRacketBaseCrossesHL.style.display = 'none';\n\n      if (mainsDisplayBoolean === true) {\n        appointmentRacketBaseMainsHL.style.display = 'flex';\n        appointmentRacketBase.style.display = 'none';\n        appointmentRacketStencilMainsHL.style.display = 'none';\n      } else if (crossesDisplayBoolean === true) {\n        appointmentRacketBaseCrossesHL.style.display = 'flex';\n        appointmentRacketBase.style.display = 'none';\n        appointmentRacketBaseMainsHL.style.display = 'none';\n      }\n    }\n  }); //Creates minDate for Drop-off\n\n  let minDate = new Date();\n  let day = minDate.getDate();\n  let minMonth = minDate.getMonth() + 1;\n  let maxMonth = minDate.getMonth() + 2;\n  let year = minDate.getFullYear();\n\n  if (day < 10) {\n    day = '0' + day;\n  }\n\n  if (minMonth || maxMonth < 10) {\n    minMonth = '0' + minMonth;\n    maxMonth = '0' + maxMonth;\n  }\n\n  minDate = year + '-' + minMonth + '-' + day;\n  let maxDate = year + '-' + maxMonth + '-' + '28';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"makeAppointmentWrapper\",\n    id: \"makeAppointment\",\n    onClick: () => handleHighlightClear,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"orderFormWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"underline\",\n        children: \"Order Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Tension\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mains: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"mainsTension\",\n          name: \"mainsTension\",\n          size: \"3\",\n          placeholder: \"55\",\n          min: \"10\",\n          max: \"70\",\n          onClick: () => handleMainsInputClick,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"lbsOrKilos\",\n          id: \"lbsOrKilos\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lbs\",\n            children: \"lbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"kgs\",\n            children: \"kgs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Crosses: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"crossesTension\",\n          name: \"crossesTension\",\n          size: \"3\",\n          maxLength: \"2\",\n          placeholder: \"55\",\n          min: \"10\",\n          max: \"70\",\n          onClick: () => handleCrossesInputClick,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"lbsOrKilos\",\n          id: \"lbsOrKilos\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lbs\",\n            children: \"lbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"kgs\",\n            children: \"kgs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"String Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mains: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"mainsStringType\",\n          id: \"mainsStringType\",\n          onClick: () => handleMainsInputClick,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"RPMBlast\",\n            children: \"RPM Blast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"HyperG\",\n            children: \"Hyper G\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Crosses: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"crossesStringType\",\n          id: \"crossesStringType\",\n          onClick: () => handleCrossesInputClick,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"RPMBlast\",\n            children: \"RPM Blast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"HyperG\",\n            children: \"Hyper G\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Scheduling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date of Drop-off: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: `${minDate}`,\n          max: `${maxDate}`,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date of Pick-up: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Optionals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"DTS Stencil: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"stencilCheckbox\",\n          onClick: () => handleStencilChkBxClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Regrip: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"submitAppointmentBtn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointmentRacketWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"appointmentRacketbase\",\n        src: tennisRacketNoDTSStencil,\n        id: \"appointmentRacketBase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"appointmentRacketStencil\",\n        src: tennisRacketDTSStencil,\n        id: \"appointmentRacketStencil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"appointmentRacketStencilCrossesHL\",\n        src: tennisRacketStenCrossesHL,\n        id: \"appointmentRacketStencilCrossesHL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"appointmentRacketStencilMainsHL\",\n        src: tennisRacketStenMainsHL,\n        id: \"appointmentRacketStencilMainsHL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"appointmentRacketBaseCrossesHL\",\n        src: tennisRacketNoStenCrossesHL,\n        id: \"appointmentRacketBaseCrossesHL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"appointmentRacketBaseMainsHL\",\n        src: tennisRacketNoStenMainsHL,\n        id: \"appointmentRacketBaseMainsHL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MakeAppointment, \"gL7inbPIDbDOEDGnDajXEfzauxE=\");\n\n_c = MakeAppointment;\nexport default MakeAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeAppointment\");","map":{"version":3,"sources":["C:/Users/miapu/DTS_A_Stringing_Operation/src/components/MakeAppointment.js"],"names":["findAllByTestId","React","useEffect","useState","tennisRacketDTSStencil","tennisRacketNoDTSStencil","tennisRacketNoStenCrossesHL","tennisRacketNoStenMainsHL","tennisRacketStenCrossesHL","tennisRacketStenMainsHL","MakeAppointment","props","mainsDisplayBoolean","setMainsDisplayBoolean","handleMainsInputClick","event","stopPropagation","mainsTension","document","getElementById","mainsStringType","activeElement","setCrossesDisplayBoolean","crossesDisplayBoolean","handleCrossesInputClick","console","log","crossesTension","crossesStringType","stencilDisplayBoolean","setStencilDisplayBoolean","handleStencilChkBxClick","stencilCheckbox","checked","handleHighlightClear","appointmentRacketBase","appointmentRacketStencil","appointmentRacketStencilMainsHL","appointmentRacketBaseMainsHL","appointmentRacketStencilCrossesHL","appointmentRacketBaseCrossesHL","style","display","minDate","Date","day","getDate","minMonth","getMonth","maxMonth","year","getFullYear","maxDate"],"mappings":"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","sourcesContent":["import { findAllByTestId } from '@testing-library/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport tennisRacketDTSStencil from '../images/tennisracketdtsstencil.png'\r\nimport tennisRacketNoDTSStencil from '../images/tennisracketnodtsstencil.png'\r\nimport tennisRacketNoStenCrossesHL from '../images/tennisracketnostencrosseshl.png'\r\nimport tennisRacketNoStenMainsHL from '../images/tennisracketnostenmainshl.png'\r\nimport tennisRacketStenCrossesHL from '../images/tennisracketstencrosseshl.png'\r\nimport tennisRacketStenMainsHL from '../images/tennisracketstenmainshl.png'\r\n\r\nconst MakeAppointment = (props) => {\r\n  //Creates a state for Mains in order to update page when clicked\r\n  const [mainsDisplayBoolean, setMainsDisplayBoolean] = useState(false)\r\n\r\n  function handleMainsInputClick(event) {\r\n    event.stopPropagation();\r\n    const mainsTension = document.getElementById('mainsTension')\r\n    const mainsStringType = document.getElementById('mainsStringType')\r\n    mainsTension || mainsStringType === document.activeElement ? setMainsDisplayBoolean(true) : setMainsDisplayBoolean(false)\r\n    setCrossesDisplayBoolean(false)\r\n  }\r\n\r\n  //Creates a state for Mains in order to update page when clicked\r\n  const [crossesDisplayBoolean, setCrossesDisplayBoolean] = useState(false)\r\n\r\n  function handleCrossesInputClick(event) {\r\n    event.stopPropagation();\r\n    console.log('crosses')\r\n    const crossesTension = document.getElementById('crossesTension')\r\n    const crossesStringType = document.getElementById('crossesStringType')\r\n    crossesTension || crossesStringType === document.activeElement ? setCrossesDisplayBoolean(true) : setCrossesDisplayBoolean(false)\r\n    setMainsDisplayBoolean(false)\r\n  }\r\n\r\n  //Creates a state for DTS Stencil in order to update page when clicked\r\n  const [stencilDisplayBoolean, setStencilDisplayBoolean] = useState(false)\r\n\r\n  function handleStencilChkBxClick(event) {\r\n    event.stopPropagation();\r\n    const stencilCheckbox = document.getElementById('stencilCheckbox')\r\n    stencilCheckbox.checked === false ? setStencilDisplayBoolean(false) : setStencilDisplayBoolean(true)\r\n  }\r\n\r\n  //Clears all highlights on racket\r\n  function handleHighlightClear() {\r\n    setMainsDisplayBoolean(false)\r\n    setCrossesDisplayBoolean(false)\r\n  }\r\n\r\n  useEffect (() => {\r\n    //logic to replace pictures showing highlighted strings\r\n    const appointmentRacketBase = document.getElementById('appointmentRacketBase')\r\n    const appointmentRacketStencil = document.getElementById('appointmentRacketStencil')\r\n    const appointmentRacketStencilMainsHL = document.getElementById('appointmentRacketStencilMainsHL')\r\n    const appointmentRacketBaseMainsHL = document.getElementById('appointmentRacketBaseMainsHL')\r\n    const appointmentRacketStencilCrossesHL = document.getElementById('appointmentRacketStencilCrossesHL')\r\n    const appointmentRacketBaseCrossesHL = document.getElementById('appointmentRacketBaseCrossesHL')\r\n\r\n    if (stencilDisplayBoolean === true) {\r\n      appointmentRacketStencil.style.display = 'flex'\r\n      appointmentRacketBase.style.display = 'none'\r\n      appointmentRacketStencilMainsHL.style.display = 'none'\r\n      appointmentRacketStencilCrossesHL.style.display = 'none'\r\n      appointmentRacketBaseCrossesHL.style.display = 'none'\r\n        if (mainsDisplayBoolean === true) {\r\n          appointmentRacketStencilMainsHL.style.display = 'flex'\r\n          appointmentRacketBaseMainsHL.style.display = 'none'\r\n          appointmentRacketStencil.style.display = 'none'\r\n        } else if (crossesDisplayBoolean === true) {\r\n          appointmentRacketStencilCrossesHL.style.display = 'flex'\r\n          appointmentRacketStencil.style.display = 'none'\r\n        }\r\n    } else {\r\n      appointmentRacketBase.style.display = 'flex'\r\n      appointmentRacketStencil.style.display = 'none'\r\n      appointmentRacketStencilMainsHL.style.display = 'none'\r\n      appointmentRacketBaseMainsHL.style.display = 'none'\r\n      appointmentRacketStencilCrossesHL.style.display = 'none'\r\n      appointmentRacketBaseCrossesHL.style.display = 'none'\r\n        if (mainsDisplayBoolean === true) {\r\n          appointmentRacketBaseMainsHL.style.display = 'flex'\r\n          appointmentRacketBase.style.display = 'none'\r\n          appointmentRacketStencilMainsHL.style.display = 'none'\r\n        } else if (crossesDisplayBoolean === true) {    \r\n          appointmentRacketBaseCrossesHL.style.display = 'flex' \r\n          appointmentRacketBase.style.display = 'none'\r\n          appointmentRacketBaseMainsHL.style.display = 'none'  \r\n        }\r\n      }\r\n      \r\n  })\r\n\r\n  //Creates minDate for Drop-off\r\n  let minDate = new Date()\r\n  let day = minDate.getDate()\r\n  let minMonth = minDate.getMonth() + 1\r\n  let maxMonth = minDate.getMonth() + 2\r\n  let year = minDate.getFullYear()\r\n  if (day < 10) {\r\n    day = '0' + day\r\n  } \r\n  if (minMonth || maxMonth < 10) {\r\n    minMonth = '0' + minMonth\r\n    maxMonth = '0' + maxMonth\r\n  }\r\n  minDate = year + '-' + minMonth + '-' + day\r\n  let maxDate = year + '-' + maxMonth + '-' + '28'\r\n  \r\n  return (\r\n    <div className='makeAppointmentWrapper' id='makeAppointment' onClick={() => handleHighlightClear}>\r\n        <form className='orderFormWrapper'>\r\n          <h2 className='underline'>Order Form</h2>\r\n            <br></br>\r\n          \r\n          <fieldset>\r\n            <legend>Tension</legend>\r\n              <label>Mains: </label>\r\n              <input \r\n                type='number' \r\n                id='mainsTension' \r\n                name='mainsTension' \r\n                size='3'\r\n                placeholder='55' \r\n                min='10' max='70' \r\n                onClick={() => handleMainsInputClick} \r\n                required>\r\n              </input>\r\n              <select name='lbsOrKilos' id='lbsOrKilos'>\r\n                <option value='lbs'>lbs</option>\r\n                <option value='kgs'>kgs</option>\r\n              </select>          \r\n                <br></br>\r\n              <label>Crosses: </label>\r\n              <input \r\n                type='number' \r\n                id='crossesTension' \r\n                name='crossesTension' \r\n                size='3' \r\n                maxLength='2' \r\n                placeholder='55' \r\n                min='10' \r\n                max='70'\r\n                onClick={() => handleCrossesInputClick} \r\n                required></input>\r\n              <select name='lbsOrKilos' id='lbsOrKilos'>\r\n                <option value='lbs'>lbs</option>\r\n                <option value='kgs'>kgs</option>\r\n              </select> \r\n                <br></br>\r\n          </fieldset>\r\n         \r\n          <fieldset>\r\n            <legend>String Type</legend>\r\n              <label>Mains: </label>\r\n              <select name='mainsStringType' id='mainsStringType' onClick={() => handleMainsInputClick}>\r\n                <option value='RPMBlast'>RPM Blast</option>\r\n                <option value='HyperG'>Hyper G</option>\r\n              </select>\r\n                <br></br>\r\n              <label>Crosses: </label>\r\n              <select name='crossesStringType' id='crossesStringType' onClick={() => handleCrossesInputClick}>\r\n                <option value='RPMBlast'>RPM Blast</option>\r\n                <option value='HyperG'>Hyper G</option>\r\n              </select>\r\n          </fieldset>\r\n          \r\n          <fieldset>\r\n            <legend>Scheduling</legend>\r\n              <label>Date of Drop-off: </label>\r\n              <input type='date' min={`${minDate}`} max={`${maxDate}`} required></input>\r\n                <br></br>\r\n              <label>Date of Pick-up: </label>\r\n              <input type='date' required></input>\r\n                <br></br>\r\n          </fieldset>\r\n\r\n          <fieldset>\r\n            <legend>Optionals</legend>\r\n              <label>DTS Stencil: </label>\r\n              <input \r\n                type='checkbox' \r\n                id='stencilCheckbox'\r\n                onClick={() => handleStencilChkBxClick}></input> \r\n                <br></br>\r\n              <label>Regrip: </label>\r\n              <input type='checkbox'></input>\r\n          </fieldset>\r\n\r\n          <input type='submit' value='Submit' className='submitAppointmentBtn'></input>\r\n        </form>\r\n\r\n        <div className='appointmentRacketWrapper'>\r\n          <img className='appointmentRacketbase' src={tennisRacketNoDTSStencil} id='appointmentRacketBase'></img>\r\n          <img className='appointmentRacketStencil' src={tennisRacketDTSStencil} id='appointmentRacketStencil'></img>\r\n          <img className='appointmentRacketStencilCrossesHL' src={tennisRacketStenCrossesHL} id='appointmentRacketStencilCrossesHL'></img>\r\n          <img className='appointmentRacketStencilMainsHL' src={tennisRacketStenMainsHL} id='appointmentRacketStencilMainsHL'></img>\r\n          <img className='appointmentRacketBaseCrossesHL' src={tennisRacketNoStenCrossesHL} id='appointmentRacketBaseCrossesHL'></img>\r\n          <img className='appointmentRacketBaseMainsHL' src={tennisRacketNoStenMainsHL} id='appointmentRacketBaseMainsHL'></img>\r\n        </div>\r\n    </div>\r\n        \r\n  )\r\n}\r\n\r\nexport default MakeAppointment"]},"metadata":{},"sourceType":"module"}